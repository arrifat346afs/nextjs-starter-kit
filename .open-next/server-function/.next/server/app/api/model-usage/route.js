(()=>{var e={};e.id=219,e.ids=[219],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},8086:e=>{"use strict";e.exports=require("module")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33873:e=>{"use strict";e.exports=require("path")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},67021:(e,r,s)=>{"use strict";s.r(r),s.d(r,{patchFetch:()=>w,routeModule:()=>x,serverHooks:()=>N,workAsyncStorage:()=>y,workUnitAsyncStorage:()=>E});var t={};s.r(t),s.d(t,{DELETE:()=>h,GET:()=>p,OPTIONS:()=>m,POST:()=>f,runtime:()=>l});var a=s(96559),o=s(48088),n=s(37719),u=s(32190),c=s(87282),d=s(84529);let l="nodejs",i=new c.Tb("https://oceanic-lapwing-713.convex.cloud");function g(){return{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, DELETE, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"}}async function m(){return new u.NextResponse(null,{status:200,headers:g()})}async function p(e){try{let r;let s=e.nextUrl.searchParams,t=s.get("userId");if(console.log(`API GET request received with userId: ${t||"none"}`),console.log(`Request URL: ${e.url}`),console.log("Request headers:",Object.fromEntries(e.headers.entries())),t){console.log(`Querying Convex for user-specific data with userId: ${t}`);try{if(r=await i.query(d.F.modelUsage.getUserModelUsageData,{userId:t}),console.log(`Convex query result for user ${t}:`,{success:r.success,dataCount:r.data?.length||0,message:r.message||"",error:r.error}),!r.data||0===r.data.length){if(console.log(`No data found for user ${t}`),"true"===s.get("forceTestData")){console.log("ForceTestData parameter detected, creating test data");let e=["Stable Diffusion","DALL-E","Midjourney"],r=Date.now(),s=[];for(let a=0;a<7;a++){let o=r-864e5*a;e.forEach(e=>{s.push({modelName:e,imageCount:Math.floor(20*Math.random())+5,timestamp:o,userId:t})})}return console.log(`Created ${s.length} test data points for user ${t}`),u.NextResponse.json({success:!0,data:s,message:"Using generated test data for this user"},{headers:g()})}return u.NextResponse.json({success:!0,data:[],message:"No data found for this user"},{headers:g()})}}catch(e){if(console.error(`Error querying Convex for user ${t}:`,e),"true"===s.get("forceTestData")){console.log(`Creating fallback test data for user ${t} (forced)`);let e=Date.now(),r=["Stable Diffusion","DALL-E","Midjourney"].flatMap(r=>[{modelName:r,imageCount:Math.floor(20*Math.random())+5,timestamp:e,userId:t},{modelName:r,imageCount:Math.floor(15*Math.random())+3,timestamp:e-864e5,userId:t}]);return u.NextResponse.json({success:!0,data:r,message:"Using fallback test data due to error"},{headers:g()})}return u.NextResponse.json({success:!1,data:[],error:`Error querying database: ${e.message||"Unknown error"}`},{headers:g(),status:500})}}else console.log("Querying Convex for all model usage data"),r=await i.query(d.F.modelUsage.getModelUsageData);return r.data&&r.data.length>0&&console.log("Sample data being returned:",r.data.slice(0,2)),u.NextResponse.json({success:r.success,data:r.data||[],message:"message"in r?r.message:"",error:r.error},{headers:g()})}catch(r){if(console.error("Error retrieving model usage data:",r),"true"===e.nextUrl.searchParams.get("forceTestData")){console.log("Creating emergency fallback data (forced)");let e=[{modelName:"Stable Diffusion",imageCount:15,timestamp:Date.now(),userId:"emergency_fallback"},{modelName:"DALL-E",imageCount:8,timestamp:Date.now()-864e5,userId:"emergency_fallback"}];return u.NextResponse.json({success:!0,data:e,message:"Using emergency fallback data due to error",error:"Original error: "+(r instanceof Error?r.message:String(r))},{status:200,headers:g()})}return u.NextResponse.json({success:!1,data:[],error:"Error retrieving model usage data: "+(r instanceof Error?r.message:String(r))},{status:500,headers:g()})}}async function f(e){try{let r,s,t,a;let o=await e.text();console.log("Raw request body from Electron app:",o);try{r=JSON.parse(o)}catch(e){return console.error("Error parsing request body from Electron app:",e),u.NextResponse.json({success:!1,error:"Invalid JSON in request body"},{status:400,headers:g()})}if(r.modelName&&r.imageCount)s=r.modelName,t=r.imageCount;else if(r.model&&r.count)s=r.model,t=r.count;else{if(!Array.isArray(r))return console.error("Unknown data format from Electron app:",r),u.NextResponse.json({success:!1,error:"Unknown data format. Expected {modelName, imageCount} or {model, count} or an array of these formats.",receivedFormat:Object.keys(r)},{status:400,headers:g()});let s=[],t=!1;for(let a of r)try{let r=a.modelName||a.model,o=a.imageCount||a.count,n=a.userId||a.user_id||a.email;if(!r||!o){console.error("Invalid item in array:",a),s.push({success:!1,error:"Invalid model data in array item",item:a}),t=!0;continue}let u=await i.mutation(d.F.modelUsage.addModelUsageData,{modelName:r,imageCount:o,userId:n||e.headers.get("x-user-id")||"unknown_user"});s.push({success:!0,data:u.data})}catch(e){console.error("Error processing array item:",e),s.push({success:!1,error:e instanceof Error?e.message:String(e)}),t=!0}return u.NextResponse.json({success:!t,data:s},{headers:g(),status:200})}if(!s||"string"!=typeof s)return u.NextResponse.json({success:!1,error:"Invalid model name"},{status:400,headers:g()});if(!t||"number"!=typeof t||t<=0)return u.NextResponse.json({success:!1,error:"Invalid image count"},{status:400,headers:g()});!(a=r.userId||r.user_id||r.email)&&(a=e.headers.get("x-user-id")||e.headers.get("x-email")||e.headers.get("authorization"))&&a.startsWith("Bearer ")&&(console.log("Found authorization header, trying to extract userId"),a=a.replace("Bearer ","")),a||(a="unknown_user",console.log("No userId found, using default:",a)),console.log("Processing model usage data from Electron app:",{modelName:s,imageCount:t,userId:a});try{let e=await i.mutation(d.F.modelUsage.addModelUsageData,{modelName:s,imageCount:t,userId:a});return console.log("Successfully stored Electron app data in Convex:",{success:e.success,data:e.data}),u.NextResponse.json({success:e.success,data:e.data,message:"message"in e?e.message:"Data from Electron app successfully stored"},{headers:g(),status:e.success?200:400})}catch(e){return console.error("Error storing Electron app data in Convex:",e),u.NextResponse.json({success:!1,error:"Failed to store data: "+(e instanceof Error?e.message:String(e))},{headers:g(),status:500})}}catch(e){return console.error("Error processing Electron app request:",e),u.NextResponse.json({success:!1,error:"Server error processing request: "+(e instanceof Error?e.message:String(e))},{headers:g(),status:500})}}async function h(){try{let e=await i.mutation(d.F.modelUsage.clearModelUsageData);return u.NextResponse.json({success:e.success,message:e.message||"All model usage data cleared",error:e.error},{headers:g(),status:e.success?200:400})}catch(e){return console.error("Error clearing model usage data:",e),u.NextResponse.json({success:!1,error:"Failed to clear model usage data"},{status:500,headers:g()})}}let x=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/model-usage/route",pathname:"/api/model-usage",filename:"route",bundlePath:"app/api/model-usage/route"},resolvedPagePath:"D:\\Coding\\polar\\nextjs14-starter-template\\app\\api\\model-usage\\route.ts",nextConfigOutput:"standalone",userland:t}),{workAsyncStorage:y,workUnitAsyncStorage:E,serverHooks:N}=x;function w(){return(0,n.patchFetch)({workAsyncStorage:y,workUnitAsyncStorage:E})}},78335:()=>{},84529:(e,r,s)=>{"use strict";s.d(r,{F:()=>t});let t=s(31350).dp},96487:()=>{}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[80,182,228],()=>s(67021));module.exports=t})();